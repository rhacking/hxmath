// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() { };
Main.main = function() {
	var this1 = new kha_math_FastVector2(1,0);
	var v = this1;
	var w_z;
	var w_y;
	var w_x = 0;
	w_y = 1;
	w_z = 0;
	var this2 = new kha_math_FastVector2(w_x,w_y);
	var b = this2;
	var self = v;
	var this3 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this3;
	self1.x += b.x;
	self1.y += b.y;
	console.log(self1);
	var angle = Math.PI / 2;
	var this4 = new kha_math_FastVector2(0,0);
	var pivot = this4;
	var self2 = v;
	var cos = Math.cos(angle);
	var sin = Math.sin(angle);
	var dx = self2.x - pivot.x;
	var dy = self2.y - pivot.y;
	self2.x = dx * Math.cos(angle) - dy * Math.sin(angle);
	self2.y = dx * Math.sin(angle) + dy * Math.cos(angle);
	console.log(v);
	var this5 = new kha_math_FastVector3(1.,1.,1.);
	var v3 = this5;
	var w3 = new kha_math_FastVector3(1,0,0);
	console.log(v3.x * w3.x + v3.y * w3.y + v3.z * w3.z);
	var this6 = new kha_math_FastVector3(-v3.x,-v3.y,-v3.z);
	var a = this6;
	console.log(a.x * w3.x + a.y * w3.y + a.z * w3.z);
	var this7 = new kha_math_FastVector3(0,1,0);
	var axis = this7;
	var self3 = v3;
	var angleRadians = Math.PI / 180 * 90;
	var cosHalfAngle = Math.cos(angleRadians / 2.0);
	var sinHalfAngle = Math.sin(angleRadians / 2.0);
	var this8 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(cosHalfAngle,sinHalfAngle * axis.x,sinHalfAngle * axis.y,sinHalfAngle * axis.z);
	var self4 = this8;
	var a1 = 2.0 * (self4.get_x() * self3.x + self4.get_y() * self3.y + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4) * self3.z);
	var b1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self4) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self4) - self4.get_x() * self4.get_x() - self4.get_y() * self4.get_y() - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4);
	var c = 2.0 * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self4);
	var this9 = new kha_math_FastVector3(a1 * self4.get_x() + b1 * self3.x + c * (self4.get_y() * self3.z - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4) * self3.y),a1 * self4.get_y() + b1 * self3.y + c * (hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4) * self3.x - self4.get_x() * self3.z),a1 * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4) + b1 * self3.z + c * (self4.get_x() * self3.y - self4.get_y() * self3.x));
	v3 = this9;
	console.log(v3);
	var rawData_0 = 1;
	var rawData_1 = 2;
	var rawData_2 = 3;
	var rawData_3 = 4;
	var this10 = new kha_math_FastVector4(rawData_0,rawData_1,rawData_2,rawData_3);
	var v4 = this10;
	var rawData_01 = 4;
	var rawData_11 = 3;
	var rawData_21 = 2;
	var rawData_31 = 1;
	var this11 = new kha_math_FastVector4(rawData_01,rawData_11,rawData_21,rawData_31);
	var w4 = this11;
	var self5 = v4;
	var this12 = new kha_math_FastVector4(self5.x,self5.y,self5.z,self5.w);
	var self6 = this12;
	self6.x += w4.x;
	self6.y += w4.y;
	self6.z += w4.z;
	self6.w += w4.w;
	console.log(self6);
	var this13 = new kha_math_FastVector3(0,1,0);
	var q = kha_math_Quaternion.fromAxisAngle(this13,Math.PI / 2);
	var this14 = new kha_math_FastVector3(1,0,0);
	var u = this14;
	var self7 = q;
	var a2 = 2.0 * (self7.get_x() * u.x + self7.get_y() * u.y + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7) * u.z);
	var b2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self7) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self7) - self7.get_x() * self7.get_x() - self7.get_y() * self7.get_y() - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7);
	var c1 = 2.0 * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self7);
	var this15 = new kha_math_FastVector3(a2 * self7.get_x() + b2 * u.x + c1 * (self7.get_y() * u.z - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7) * u.y),a2 * self7.get_y() + b2 * u.y + c1 * (hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7) * u.x - self7.get_x() * u.z),a2 * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7) + b2 * u.z + c1 * (self7.get_x() * u.y - self7.get_y() * u.x));
	console.log(this15);
};
var Std = function() { };
Std["int"] = function(x) {
	return x | 0;
};
var hxmath_math_IntVector2Default = function(x,y) {
	this.x = x;
	this.y = y;
};
hxmath_math_IntVector2Default.prototype = {
	toString: function() {
		return "(" + this.x + ", " + this.y + ")";
	}
};
var hxmath_math__$IntVector2_IntVector2_$Impl_$ = {};
hxmath_math__$IntVector2_IntVector2_$Impl_$._new = function(x,y) {
	var this1 = new hxmath_math_IntVector2Default(x,y);
	return this1;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.fromArray = function(rawData) {
	if(rawData.length != 2) {
		throw new js__$Boot_HaxeError("Invalid rawData.");
	}
	return hxmath_math__$IntVector2_IntVector2_$Impl_$._new(rawData[0],rawData[1]);
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.toVector2 = function(this1) {
	var self = this1;
	var this2 = new kha_math_FastVector2(self.x,self.y);
	return this2;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.dot = function(a,b) {
	return a.x * b.x + a.y * b.y;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.multiply = function(a,s) {
	var self = a;
	var self1 = hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self.x,self.y);
	self1.x *= s;
	self1.y *= s;
	return self1;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.add = function(a,b) {
	var self = a;
	var self1 = hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self.x,self.y);
	self1.x += b.x;
	self1.y += b.y;
	return self1;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.subtract = function(a,b) {
	var self = a;
	var self1 = hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self.x,self.y);
	self1.x -= b.x;
	self1.y -= b.y;
	return self1;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.negate = function(a) {
	return hxmath_math__$IntVector2_IntVector2_$Impl_$._new(-a.x,-a.y);
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.equals = function(a,b) {
	if(!(a == null && b == null)) {
		if(a != null && b != null && a.x == b.x) {
			return a.y == b.y;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.max = function(a,b) {
	var self = a;
	var self1 = hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self.x,self.y);
	var a1 = self1.x;
	var b1 = b.x;
	self1.x = b1 > a1 ? b1 : a1;
	var a2 = self1.y;
	var b2 = b.y;
	self1.y = b2 > a2 ? b2 : a2;
	return self1;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.min = function(a,b) {
	var self = a;
	var self1 = hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self.x,self.y);
	var a1 = self1.x;
	var b1 = b.x;
	self1.x = b1 < a1 ? b1 : a1;
	var a2 = self1.y;
	var b2 = b.y;
	self1.y = b2 < a2 ? b2 : a2;
	return self1;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.set = function(this1,x,y) {
	var self = this1;
	self.x = x;
	self.y = y;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.multiplyWith = function(this1,s) {
	var self = this1;
	self.x *= s;
	self.y *= s;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.addWith = function(this1,a) {
	var self = this1;
	self.x += a.x;
	self.y += a.y;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.subtractWith = function(this1,a) {
	var self = this1;
	self.x -= a.x;
	self.y -= a.y;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.maxWith = function(this1,a) {
	var self = this1;
	var a1 = self.x;
	var b = a.x;
	self.x = b > a1 ? b : a1;
	var a2 = self.y;
	var b1 = a.y;
	self.y = b1 > a2 ? b1 : a2;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.minWith = function(this1,a) {
	var self = this1;
	var a1 = self.x;
	var b = a.x;
	self.x = b < a1 ? b : a1;
	var a2 = self.y;
	var b1 = a.y;
	self.y = b1 < a2 ? b1 : a2;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.copyTo = function(this1,target) {
	var self = this1;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self2 = target;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.clone = function(this1) {
	var self = this1;
	return hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self.x,self.y);
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.getArrayElement = function(this1,i) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x;
	case 1:
		return self.y;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.setArrayElement = function(this1,i,value) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x = value;
	case 1:
		return self.y = value;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.applyNegate = function(this1) {
	var self = this1;
	self.x = -self.x;
	self.y = -self.y;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.applyScalarFunc = function(this1,func) {
	var self = this1;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = func(value);
		var self2 = self;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.rotateLeft = function(this1) {
	var self = this1;
	var newX = -self.y;
	self.y = self.x;
	self.x = newX;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.rotateRight = function(this1) {
	var self = this1;
	var newX = self.y;
	self.y = -self.x;
	self.x = newX;
	return self;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.get_zero = function() {
	return hxmath_math__$IntVector2_IntVector2_$Impl_$._new(0,0);
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.get_xAxis = function() {
	return hxmath_math__$IntVector2_IntVector2_$Impl_$._new(1,0);
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.get_yAxis = function() {
	return hxmath_math__$IntVector2_IntVector2_$Impl_$._new(0,1);
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.get_lengthSq = function(this1) {
	var self = this1;
	return self.x * self.x + self.y * self.y;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.get_rotatedLeft = function(this1) {
	var self = this1;
	var self1 = self;
	var self2 = hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self1.x,self1.y);
	var newX = -self2.y;
	self2.y = self2.x;
	self2.x = newX;
	return self2;
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.get_rotatedRight = function(this1) {
	var self = this1;
	var self1 = self;
	var self2 = hxmath_math__$IntVector2_IntVector2_$Impl_$._new(self1.x,self1.y);
	var newX = self2.y;
	self2.y = -self2.x;
	self2.x = newX;
	return self2;
};
var hxmath_math_MathUtil = function() { };
hxmath_math_MathUtil.intMax = function(a,b) {
	if(b > a) {
		return b;
	} else {
		return a;
	}
};
hxmath_math_MathUtil.intMin = function(a,b) {
	if(b < a) {
		return b;
	} else {
		return a;
	}
};
hxmath_math_MathUtil.lerpCyclic = function(a,b,t,max) {
	if(Math.abs(a - b) > 0.5 * max) {
		if(a < b) {
			a += max;
		} else {
			b += max;
		}
	}
	var x = (1.0 - t) * a + t * b;
	if(x < 0) {
		return max - -x % max;
	} else {
		return x % max;
	}
};
hxmath_math_MathUtil.sign = function(x,w) {
	if(w == null) {
		w = 0;
	}
	if(Math.abs(x) < w) {
		return 0;
	} else if(x <= -w) {
		return -1;
	} else {
		return 1;
	}
};
hxmath_math_MathUtil.rangeDistance = function(aStart,aWidth,bStart,bWidth) {
	if(aStart + aWidth < bStart) {
		return bStart - (aStart + aWidth);
	} else if(bStart + bWidth < aStart) {
		return aStart - (bStart + bWidth);
	} else {
		return 0;
	}
};
hxmath_math_MathUtil.openRangeContains = function(aStart,aWidth,x) {
	if(x > aStart) {
		return x < aStart + aWidth;
	} else {
		return false;
	}
};
hxmath_math_MathUtil.openRangesIntersect = function(aStart,aWidth,bStart,bWidth) {
	return !(aStart >= bStart + bWidth || bStart >= aStart + aWidth);
};
hxmath_math_MathUtil.closedRangeContains = function(aStart,aWidth,x) {
	if(x >= aStart) {
		return x <= aStart + aWidth;
	} else {
		return false;
	}
};
hxmath_math_MathUtil.radToDeg = function(rad) {
	return 180 / Math.PI * rad;
};
hxmath_math_MathUtil.degToRad = function(deg) {
	return Math.PI / 180 * deg;
};
hxmath_math_MathUtil.wrap = function(x,n) {
	if(x < 0) {
		return n - -x % n;
	} else {
		return x % n;
	}
};
hxmath_math_MathUtil.clamp = function(value,min,max) {
	if(value < min) {
		return min;
	} else if(value > max) {
		return max;
	} else {
		return value;
	}
};
hxmath_math_MathUtil.orient2d = function(a,b,c) {
	var result = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x);
	if(result > 0) {
		return 1;
	} else if(result < 0) {
		return -1;
	} else {
		return 0;
	}
};
hxmath_math_MathUtil.det2x2 = function(m00,m10,m01,m11) {
	return m00 * m11 - m10 * m01;
};
hxmath_math_MathUtil.det3x3 = function(m00,m10,m20,m01,m11,m21,m02,m12,m22) {
	return m00 * (m11 * m22 - m21 * m12) - m10 * (m01 * m22 - m21 * m02) + m20 * (m01 * m12 - m11 * m02);
};
hxmath_math_MathUtil.det4x4 = function(m00,m10,m20,m30,m01,m11,m21,m31,m02,m12,m22,m32,m03,m13,m23,m33) {
	return m00 * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13)) - m10 * (m01 * (m22 * m33 - m32 * m23) - m21 * (m02 * m33 - m32 * m03) + m31 * (m02 * m23 - m22 * m03)) + m20 * (m01 * (m12 * m33 - m32 * m13) - m11 * (m02 * m33 - m32 * m03) + m31 * (m02 * m13 - m12 * m03)) - m30 * (m01 * (m12 * m23 - m22 * m13) - m11 * (m02 * m23 - m22 * m03) + m21 * (m02 * m13 - m12 * m03));
};
var hxmath_math_Matrix3x3Default = function(m00,m10,m20,m01,m11,m21,m02,m12,m22) {
	this.m00 = m00;
	this.m10 = m10;
	this.m20 = m20;
	this.m01 = m01;
	this.m11 = m11;
	this.m21 = m21;
	this.m02 = m02;
	this.m12 = m12;
	this.m22 = m22;
};
hxmath_math_Matrix3x3Default.prototype = {
	toString: function() {
		return "[[" + this.m00 + ", " + this.m10 + ", " + this.m20 + "], [" + this.m01 + ", " + this.m11 + ", " + this.m21 + "], [" + this.m02 + ", " + this.m12 + ", " + this.m22 + "]]";
	}
};
var hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$ = {};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$._new = function(m00,m10,m20,m01,m11,m21,m02,m12,m22) {
	var this1 = new hxmath_math_Matrix3x3Default(m00,m10,m20,m01,m11,m21,m02,m12,m22);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.fromArray = function(rawData) {
	if(rawData.length != 9) {
		throw new js__$Boot_HaxeError("Invalid rawData.");
	}
	var this1 = new hxmath_math_Matrix3x3Default(rawData[0],rawData[1],rawData[2],rawData[3],rawData[4],rawData[5],rawData[6],rawData[7],rawData[8]);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.fromMatrix3x3Shape = function(other) {
	var this1 = new hxmath_math_Matrix3x3Default(other.m00,other.m10,other.m20,other.m01,other.m11,other.m21,other.m02,other.m12,other.m22);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.multiplyScalar = function(s,a) {
	var this1 = new hxmath_math_Matrix3x3Default(s * a.m00,s * a.m10,s * a.m20,s * a.m01,s * a.m11,s * a.m21,s * a.m02,s * a.m12,s * a.m22);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.multiplyVector = function(a,v) {
	var this1 = new kha_math_FastVector3(a.m00 * v.x + a.m10 * v.y + a.m20 * v.z,a.m01 * v.x + a.m11 * v.y + a.m21 * v.z,a.m02 * v.x + a.m12 * v.y + a.m22 * v.z);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.multiply = function(a,b) {
	var this1 = new hxmath_math_Matrix3x3Default(a.m00 * b.m00 + a.m10 * b.m01 + a.m20 * b.m02,a.m00 * b.m10 + a.m10 * b.m11 + a.m20 * b.m12,a.m00 * b.m20 + a.m10 * b.m21 + a.m20 * b.m22,a.m01 * b.m00 + a.m11 * b.m01 + a.m21 * b.m02,a.m01 * b.m10 + a.m11 * b.m11 + a.m21 * b.m12,a.m01 * b.m20 + a.m11 * b.m21 + a.m21 * b.m22,a.m02 * b.m00 + a.m12 * b.m01 + a.m22 * b.m02,a.m02 * b.m10 + a.m12 * b.m11 + a.m22 * b.m12,a.m02 * b.m20 + a.m12 * b.m21 + a.m22 * b.m22);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.add = function(a,b) {
	var self = a;
	var this1 = new hxmath_math_Matrix3x3Default(self.m00,self.m10,self.m20,self.m01,self.m11,self.m21,self.m02,self.m12,self.m22);
	var self1 = this1;
	self1.m00 += b.m00;
	self1.m10 += b.m10;
	self1.m20 += b.m20;
	self1.m01 += b.m01;
	self1.m11 += b.m11;
	self1.m21 += b.m21;
	self1.m02 += b.m02;
	self1.m12 += b.m12;
	self1.m22 += b.m22;
	return self1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.subtract = function(a,b) {
	var self = a;
	var this1 = new hxmath_math_Matrix3x3Default(self.m00,self.m10,self.m20,self.m01,self.m11,self.m21,self.m02,self.m12,self.m22);
	var self1 = this1;
	self1.m00 -= b.m00;
	self1.m10 -= b.m10;
	self1.m20 -= b.m20;
	self1.m01 -= b.m01;
	self1.m11 -= b.m11;
	self1.m21 -= b.m21;
	self1.m02 -= b.m02;
	self1.m12 -= b.m12;
	self1.m22 -= b.m22;
	return self1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.negate = function(a) {
	var this1 = new hxmath_math_Matrix3x3Default(-a.m00,-a.m10,-a.m20,-a.m01,-a.m11,-a.m21,-a.m02,-a.m12,-a.m22);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.equals = function(a,b) {
	if(!(a == null && b == null)) {
		if(a != null && b != null && a.m00 == b.m00 && a.m10 == b.m10 && a.m20 == b.m20 && a.m01 == b.m01 && a.m11 == b.m11 && a.m21 == b.m21 && a.m02 == b.m02 && a.m12 == b.m12) {
			return a.m22 == b.m22;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.rotationX = function(angleDegrees) {
	var angleRadians = Math.PI / 180 * angleDegrees;
	var s = Math.sin(angleRadians);
	var c = Math.cos(angleRadians);
	var this1 = new hxmath_math_Matrix3x3Default(1,0,0,0,c,-s,0,s,c);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.rotationY = function(angleDegrees) {
	var angleRadians = Math.PI / 180 * angleDegrees;
	var s = Math.sin(angleRadians);
	var c = Math.cos(angleRadians);
	var this1 = new hxmath_math_Matrix3x3Default(c,0,s,0,1,0,-s,0,c);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.rotationZ = function(angleDegrees) {
	var angleRadians = Math.PI / 180 * angleDegrees;
	var s = Math.sin(angleRadians);
	var c = Math.cos(angleRadians);
	var this1 = new hxmath_math_Matrix3x3Default(c,-s,0,s,c,0,0,0,1);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.scale = function(sx,sy,sz) {
	var this1 = new hxmath_math_Matrix3x3Default(sx,0.0,0.0,0.0,sy,0.0,0.0,0.0,sz);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.set = function(this1,m00,m10,m20,m01,m11,m21,m02,m12,m22) {
	var self = this1;
	self.m00 = m00;
	self.m10 = m10;
	self.m20 = m20;
	self.m01 = m01;
	self.m11 = m11;
	self.m21 = m21;
	self.m02 = m02;
	self.m12 = m12;
	self.m22 = m22;
	return self;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.addWith = function(this1,a) {
	var self = this1;
	self.m00 += a.m00;
	self.m10 += a.m10;
	self.m20 += a.m20;
	self.m01 += a.m01;
	self.m11 += a.m11;
	self.m21 += a.m21;
	self.m02 += a.m02;
	self.m12 += a.m12;
	self.m22 += a.m22;
	return self;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.subtractWith = function(this1,a) {
	var self = this1;
	self.m00 -= a.m00;
	self.m10 -= a.m10;
	self.m20 -= a.m20;
	self.m01 -= a.m01;
	self.m11 -= a.m11;
	self.m21 -= a.m21;
	self.m02 -= a.m02;
	self.m12 -= a.m12;
	self.m22 -= a.m22;
	return self;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.copyTo = function(this1,target) {
	var self = this1;
	var _g = 0;
	while(_g < 9) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.m00;
			break;
		case 1:
			value = self1.m10;
			break;
		case 2:
			value = self1.m20;
			break;
		case 3:
			value = self1.m01;
			break;
		case 4:
			value = self1.m11;
			break;
		case 5:
			value = self1.m21;
			break;
		case 6:
			value = self1.m02;
			break;
		case 7:
			value = self1.m12;
			break;
		case 8:
			value = self1.m22;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self2 = target;
		switch(i) {
		case 0:
			self2.m00 = value1;
			break;
		case 1:
			self2.m10 = value1;
			break;
		case 2:
			self2.m20 = value1;
			break;
		case 3:
			self2.m01 = value1;
			break;
		case 4:
			self2.m11 = value1;
			break;
		case 5:
			self2.m21 = value1;
			break;
		case 6:
			self2.m02 = value1;
			break;
		case 7:
			self2.m12 = value1;
			break;
		case 8:
			self2.m22 = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.copyToShape = function(this1,target) {
	var self = this1;
	target.m00 = self.m00;
	target.m01 = self.m01;
	target.m02 = self.m02;
	target.m10 = self.m10;
	target.m11 = self.m11;
	target.m12 = self.m12;
	target.m20 = self.m20;
	target.m21 = self.m21;
	target.m22 = self.m22;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.copyFromShape = function(this1,source) {
	var self = this1;
	self.m00 = source.m00;
	self.m01 = source.m01;
	self.m02 = source.m02;
	self.m10 = source.m10;
	self.m11 = source.m11;
	self.m12 = source.m12;
	self.m20 = source.m20;
	self.m21 = source.m21;
	self.m22 = source.m22;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.clone = function(this1) {
	var self = this1;
	var this2 = new hxmath_math_Matrix3x3Default(self.m00,self.m10,self.m20,self.m01,self.m11,self.m21,self.m02,self.m12,self.m22);
	return this2;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.getArrayElement = function(this1,i) {
	var self = this1;
	switch(i) {
	case 0:
		return self.m00;
	case 1:
		return self.m10;
	case 2:
		return self.m20;
	case 3:
		return self.m01;
	case 4:
		return self.m11;
	case 5:
		return self.m21;
	case 6:
		return self.m02;
	case 7:
		return self.m12;
	case 8:
		return self.m22;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.setArrayElement = function(this1,i,value) {
	var self = this1;
	switch(i) {
	case 0:
		return self.m00 = value;
	case 1:
		return self.m10 = value;
	case 2:
		return self.m20 = value;
	case 3:
		return self.m01 = value;
	case 4:
		return self.m11 = value;
	case 5:
		return self.m21 = value;
	case 6:
		return self.m02 = value;
	case 7:
		return self.m12 = value;
	case 8:
		return self.m22 = value;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.getElement = function(this1,column,row) {
	var self = this1;
	var self1 = self;
	var tmp;
	switch(row * 3 + column) {
	case 0:
		tmp = self1.m00;
		break;
	case 1:
		tmp = self1.m10;
		break;
	case 2:
		tmp = self1.m20;
		break;
	case 3:
		tmp = self1.m01;
		break;
	case 4:
		tmp = self1.m11;
		break;
	case 5:
		tmp = self1.m21;
		break;
	case 6:
		tmp = self1.m02;
		break;
	case 7:
		tmp = self1.m12;
		break;
	case 8:
		tmp = self1.m22;
		break;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
	return tmp;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.setElement = function(this1,column,row,value) {
	var self = this1;
	var self1 = self;
	var tmp;
	switch(row * 3 + column) {
	case 0:
		tmp = self1.m00 = value;
		break;
	case 1:
		tmp = self1.m10 = value;
		break;
	case 2:
		tmp = self1.m20 = value;
		break;
	case 3:
		tmp = self1.m01 = value;
		break;
	case 4:
		tmp = self1.m11 = value;
		break;
	case 5:
		tmp = self1.m21 = value;
		break;
	case 6:
		tmp = self1.m02 = value;
		break;
	case 7:
		tmp = self1.m12 = value;
		break;
	case 8:
		tmp = self1.m22 = value;
		break;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
	return tmp;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.col = function(this1,index) {
	var self = this1;
	switch(index) {
	case 0:
		var this2 = new kha_math_FastVector3(self.m00,self.m01,self.m02);
		return this2;
	case 1:
		var this3 = new kha_math_FastVector3(self.m10,self.m11,self.m12);
		return this3;
	case 2:
		var this4 = new kha_math_FastVector3(self.m20,self.m21,self.m22);
		return this4;
	default:
		throw new js__$Boot_HaxeError("Invalid column");
	}
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.row = function(this1,index) {
	var self = this1;
	switch(index) {
	case 0:
		var this2 = new kha_math_FastVector3(self.m00,self.m10,self.m20);
		return this2;
	case 1:
		var this3 = new kha_math_FastVector3(self.m01,self.m11,self.m21);
		return this3;
	case 2:
		var this4 = new kha_math_FastVector3(self.m02,self.m12,self.m22);
		return this4;
	default:
		throw new js__$Boot_HaxeError("Invalid row");
	}
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.applyScalarFunc = function(this1,func) {
	var self = this1;
	var _g = 0;
	while(_g < 9) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.m00;
			break;
		case 1:
			value = self1.m10;
			break;
		case 2:
			value = self1.m20;
			break;
		case 3:
			value = self1.m01;
			break;
		case 4:
			value = self1.m11;
			break;
		case 5:
			value = self1.m21;
			break;
		case 6:
			value = self1.m02;
			break;
		case 7:
			value = self1.m12;
			break;
		case 8:
			value = self1.m22;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = func(value);
		var self2 = self;
		switch(i) {
		case 0:
			self2.m00 = value1;
			break;
		case 1:
			self2.m10 = value1;
			break;
		case 2:
			self2.m20 = value1;
			break;
		case 3:
			self2.m01 = value1;
			break;
		case 4:
			self2.m11 = value1;
			break;
		case 5:
			self2.m21 = value1;
			break;
		case 6:
			self2.m02 = value1;
			break;
		case 7:
			self2.m12 = value1;
			break;
		case 8:
			self2.m22 = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	return self;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.get_zero = function() {
	var this1 = new hxmath_math_Matrix3x3Default(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.get_identity = function() {
	var this1 = new hxmath_math_Matrix3x3Default(1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0);
	return this1;
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.get_det = function(this1) {
	var self = this1;
	var m01 = self.m01;
	var m11 = self.m11;
	var m21 = self.m21;
	var m02 = self.m02;
	var m12 = self.m12;
	var m22 = self.m22;
	return self.m00 * (m11 * m22 - m21 * m12) - self.m10 * (m01 * m22 - m21 * m02) + self.m20 * (m01 * m12 - m11 * m02);
};
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.get_transpose = function(this1) {
	var self = this1;
	var this2 = new hxmath_math_Matrix3x3Default(self.m00,self.m01,self.m02,self.m10,self.m11,self.m12,self.m20,self.m21,self.m22);
	return this2;
};
var hxmath_math_QuaternionDefault = function(s,x,y,z) {
	this.s = s;
	this.x = x;
	this.y = y;
	this.z = z;
};
hxmath_math_QuaternionDefault.prototype = {
	toString: function() {
		return "[" + this.s + ", (" + this.x + ", " + this.y + ", " + this.z + ")]";
	}
};
var hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$ = {};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_x = function(this1) {
	return this1.get_x();
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_x = function(this1,x) {
	return this1.set_x(x);
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_y = function(this1) {
	return this1.get_y();
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_y = function(this1,y) {
	return this1.set_y(y);
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z = function(this1) {
	return this1.get_z();
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z = function(this1,z) {
	return this1.set_z(z);
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s = function(this1) {
	return this1.get_w();
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s = function(this1,zx) {
	return this1.set_w(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(this1));
};
hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new = function(s,x,y,z) {
	var this1 = new kha_math_Quaternion(x,y,z,s);
	return this1;
};
var hxmath_math__$Quaternion_Quaternion_$Impl_$ = {};
hxmath_math__$Quaternion_Quaternion_$Impl_$._new = function(s,x,y,z) {
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(s,x,y,z);
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.fromArray = function(rawData) {
	if(rawData.length != 4) {
		throw new js__$Boot_HaxeError("Invalid rawData.");
	}
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(rawData[0],rawData[1],rawData[2],rawData[3]);
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.fromAxisAngle = function(angleDegrees,axis) {
	var angleRadians = Math.PI / 180 * angleDegrees;
	var cosHalfAngle = Math.cos(angleRadians / 2.0);
	var sinHalfAngle = Math.sin(angleRadians / 2.0);
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(cosHalfAngle,sinHalfAngle * axis.x,sinHalfAngle * axis.y,sinHalfAngle * axis.z);
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.multiplyScalar = function(a,s) {
	var self = a;
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self),self.get_x(),self.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
	var self1 = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) * s);
	self1.set_x(self1.get_x() * s);
	self1.set_y(self1.get_y() * s);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * s);
	return self1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.multiply = function(a,b) {
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) - a.get_x() * b.get_x() - a.get_y() * b.get_y() - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) * b.get_x() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) * a.get_x() + a.get_y() * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b) - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) * b.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) * b.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) * a.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) * b.get_x() - a.get_x() * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) + a.get_x() * b.get_y() - a.get_y() * b.get_x());
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.add = function(a,b) {
	var self = a;
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self),self.get_x(),self.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
	var self1 = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b));
	self1.set_x(self1.get_x() + b.get_x());
	self1.set_y(self1.get_y() + b.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b));
	return self1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.subtract = function(a,b) {
	var self = a;
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self),self.get_x(),self.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
	var self1 = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b));
	self1.set_x(self1.get_x() - b.get_x());
	self1.set_y(self1.get_y() - b.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b));
	return self1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.conjugate = function(a) {
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a),-a.get_x(),-a.get_y(),-hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a));
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.negate = function(a) {
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(-hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a),-a.get_x(),-a.get_y(),-hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a));
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.equals = function(a,b) {
	if(!(a == null && b == null)) {
		if(a != null && b != null && hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) == hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) && a.get_x() == b.get_x() && a.get_y() == b.get_y()) {
			return hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) == hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.lerp = function(a,b,t) {
	var s = 1.0 - t;
	var self = a;
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self),self.get_x(),self.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
	var self1 = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) * s);
	self1.set_x(self1.get_x() * s);
	self1.set_y(self1.get_y() * s);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * s);
	var self2 = b;
	var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self2),self2.get_x(),self2.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self2));
	var self3 = this2;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self3,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self3) * t);
	self3.set_x(self3.get_x() * t);
	self3.set_y(self3.get_y() * t);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self3,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self3) * t);
	var b1 = self3;
	var self4 = self1;
	var this3 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self4),self4.get_x(),self4.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4));
	var self5 = this3;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self5,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self5) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b1));
	self5.set_x(self5.get_x() + b1.get_x());
	self5.set_y(self5.get_y() + b1.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self5,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self5) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b1));
	return self5;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.slerp = function(a,b,t) {
	var cosHalfTheta = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) + a.get_x() * b.get_x() + a.get_y() * b.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b);
	if(Math.abs(cosHalfTheta) >= 1.0) {
		return a;
	}
	var halfTheta = Math.acos(cosHalfTheta);
	var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);
	if(Math.abs(sinHalfTheta) < 1e-3) {
		var s = 1.0 - t;
		var self = a;
		var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self),self.get_x(),self.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
		var self1 = this1;
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) * s);
		self1.set_x(self1.get_x() * s);
		self1.set_y(self1.get_y() * s);
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self1,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * s);
		var self2 = b;
		var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self2),self2.get_x(),self2.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self2));
		var self3 = this2;
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self3,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self3) * t);
		self3.set_x(self3.get_x() * t);
		self3.set_y(self3.get_y() * t);
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self3,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self3) * t);
		var b1 = self3;
		var self4 = self1;
		var this3 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self4),self4.get_x(),self4.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4));
		var self5 = this3;
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self5,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self5) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b1));
		self5.set_x(self5.get_x() + b1.get_x());
		self5.set_y(self5.get_y() + b1.get_y());
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self5,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self5) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b1));
		var self6 = self5;
		var self7 = self6;
		var length = Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self7) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self7) + self7.get_x() * self7.get_x() + self7.get_y() * self7.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self7));
		if(length > 0.0) {
			var k = 1.0 / length;
			var self8 = self6;
			hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self8,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self8) * k);
			self8.set_x(self8.get_x() * k);
			self8.set_y(self8.get_y() * k);
			hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self8,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self8) * k);
		}
		return self6;
	}
	var ta = Math.sin((1 - t) * halfTheta) / sinHalfTheta;
	var tb = Math.sin(t * halfTheta) / sinHalfTheta;
	var this4 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(0,0,0,0);
	var result = this4;
	result.set_x(a.get_x() * ta + b.get_x() * tb);
	result.set_y(a.get_y() * ta + b.get_y() * tb);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(result,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) * ta + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b) * tb);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(result,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) * ta + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) * tb);
	return result;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.dot = function(a,b) {
	return hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) + a.get_x() * b.get_x() + a.get_y() * b.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b);
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.set = function(this1,s,x,y,z) {
	var self = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self,s);
	self.set_x(x);
	self.set_y(y);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self,z);
	return self;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.invert = function(this1) {
	var self = this1;
	var self1 = self;
	var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1),self1.get_x(),self1.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1));
	var self2 = this2;
	var self3 = self2;
	self3.set_x(-self3.get_x());
	self3.set_y(-self3.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self3,-hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self3));
	var self4 = self3;
	var self5 = self4;
	var length = Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self5) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self5) + self5.get_x() * self5.get_x() + self5.get_y() * self5.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self5) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self5));
	if(length > 0.0) {
		var k = 1.0 / length;
		var self6 = self4;
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self6,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self6) * k);
		self6.set_x(self6.get_x() * k);
		self6.set_y(self6.get_y() * k);
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self6,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self6) * k);
	}
	return self4;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.multiplyWithScalar = function(this1,s) {
	var self = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) * s);
	self.set_x(self.get_x() * s);
	self.set_y(self.get_y() * s);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * s);
	return self;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.addWith = function(this1,a) {
	var self = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a));
	self.set_x(self.get_x() + a.get_x());
	self.set_y(self.get_y() + a.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a));
	return self;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.subtractWith = function(this1,a) {
	var self = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(a));
	self.set_x(self.get_x() - a.get_x());
	self.set_y(self.get_y() - a.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(a));
	return self;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.copyTo = function(this1,target) {
	var self = this1;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1);
			break;
		case 1:
			value = self1.get_x();
			break;
		case 2:
			value = self1.get_y();
			break;
		case 3:
			value = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1);
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self2 = target;
		switch(i) {
		case 0:
			hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self2,value1);
			break;
		case 1:
			self2.set_x(value1);
			break;
		case 2:
			self2.set_y(value1);
			break;
		case 3:
			hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self2,value1);
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.copyToShape = function(this1,target) {
	var self = this1;
	target.s = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self);
	target.x = self.get_x();
	target.y = self.get_y();
	target.z = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self);
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.copyFromShape = function(this1,source) {
	var self = this1;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self,source.s);
	self.set_x(source.x);
	self.set_y(source.y);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self,source.z);
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.clone = function(this1) {
	var self = this1;
	var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self),self.get_x(),self.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
	return this2;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.getArrayElement = function(this1,i) {
	var self = this1;
	switch(i) {
	case 0:
		return hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self);
	case 1:
		return self.get_x();
	case 2:
		return self.get_y();
	case 3:
		return hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self);
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.setArrayElement = function(this1,i,value) {
	var self = this1;
	switch(i) {
	case 0:
		return hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self,value);
	case 1:
		return self.set_x(value);
	case 2:
		return self.set_y(value);
	case 3:
		return hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self,value);
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.applyScalarFunc = function(this1,func) {
	var self = this1;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1);
			break;
		case 1:
			value = self1.get_x();
			break;
		case 2:
			value = self1.get_y();
			break;
		case 3:
			value = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1);
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = func(value);
		var self2 = self;
		switch(i) {
		case 0:
			hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self2,value1);
			break;
		case 1:
			self2.set_x(value1);
			break;
		case 2:
			self2.set_y(value1);
			break;
		case 3:
			hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self2,value1);
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	return self;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.log = function(this1) {
	var self = this1;
	var theta = Math.acos(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self));
	var sinTheta = Math.sin(theta);
	if(sinTheta > 0.0) {
		var k = theta / sinTheta;
		var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(0.0,k * self.get_x(),k * self.get_y(),k * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
		return this2;
	} else {
		var this3 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(0,0,0,0);
		return this3;
	}
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.exp = function(this1) {
	var self = this1;
	var theta = Math.sqrt(self.get_x() * self.get_x() + self.get_y() * self.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
	var sinTheta = Math.sin(theta);
	var cosTheta = Math.cos(theta);
	if(theta > 0.0) {
		var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(cosTheta,sinTheta * self.get_x(),sinTheta * self.get_y(),sinTheta * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
		return this2;
	} else {
		var this3 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(cosTheta,0,0,0);
		return this3;
	}
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.rotate = function(this1,u) {
	var self = this1;
	var a = 2.0 * (self.get_x() * u.x + self.get_y() * u.y + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * u.z);
	var b = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) - self.get_x() * self.get_x() - self.get_y() * self.get_y() - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self);
	var c = 2.0 * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self);
	var this2 = new kha_math_FastVector3(a * self.get_x() + b * u.x + c * (self.get_y() * u.z - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * u.y),a * self.get_y() + b * u.y + c * (hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * u.x - self.get_x() * u.z),a * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) + b * u.z + c * (self.get_x() * u.y - self.get_y() * u.x));
	return this2;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.angleWith = function(this1,b) {
	var self = this1;
	var self1 = self;
	var self2 = b;
	return 2.0 * Math.acos((hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(b) + self.get_x() * b.get_x() + self.get_y() * b.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(b)) / (Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) + self1.get_x() * self1.get_x() + self1.get_y() * self1.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1)) * Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self2) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self2) + self2.get_x() * self2.get_x() + self2.get_y() * self2.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self2) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self2))));
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.normalize = function(this1) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) + self1.get_x() * self1.get_x() + self1.get_y() * self1.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1));
	if(length > 0.0) {
		var k = 1.0 / length;
		var self2 = self;
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self2,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self2) * k);
		self2.set_x(self2.get_x() * k);
		self2.set_y(self2.get_y() * k);
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self2,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self2) * k);
	}
	return self;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.applyConjugate = function(this1) {
	var self = this1;
	self.set_x(-self.get_x());
	self.set_y(-self.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self,-hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
	return self;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.applyInvert = function(this1) {
	var self = this1;
	var self1 = self;
	self1.set_x(-self1.get_x());
	self1.set_y(-self1.get_y());
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self1,-hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1));
	var self2 = self1;
	var self3 = self2;
	var length = Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self3) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self3) + self3.get_x() * self3.get_x() + self3.get_y() * self3.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self3) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self3));
	if(length > 0.0) {
		var k = 1.0 / length;
		var self4 = self2;
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self4,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self4) * k);
		self4.set_x(self4.get_x() * k);
		self4.set_y(self4.get_y() * k);
		hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self4,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self4) * k);
	}
	return self2;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.get_zero = function() {
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(0,0,0,0);
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.get_identity = function() {
	var this1 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(1,0,0,0);
	return this1;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.get_length = function(this1) {
	var self = this1;
	return Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) + self.get_x() * self.get_x() + self.get_y() * self.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self));
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.get_lengthSq = function(this1) {
	var self = this1;
	return hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self) + self.get_x() * self.get_x() + self.get_y() * self.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self);
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.get_matrix = function(this1) {
	var self = this1;
	var s = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self);
	var x = self.get_x();
	var y = self.get_y();
	var z = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self);
	var this2 = new hxmath_math_Matrix3x3Default(1 - 2 * (y * y + z * z),2 * (x * y - s * z),2 * (s * y + x * z),2 * (x * y + s * z),1 - 2 * (x * x + z * z),2 * (y * z - s * x),2 * (x * z - s * y),2 * (y * z + s * x),1 - 2 * (x * x + y * y));
	var m = this2;
	return m;
};
hxmath_math__$Quaternion_Quaternion_$Impl_$.get_normal = function(this1) {
	var self = this1;
	var self1 = self;
	var _g = 1.0 / Math.sqrt(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) + self1.get_x() * self1.get_x() + self1.get_y() * self1.get_y() + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1));
	var _g1 = self;
	var self2 = _g1;
	var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self2),self2.get_x(),self2.get_y(),hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self2));
	var self3 = this2;
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_s(self3,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self3) * _g);
	self3.set_x(self3.get_x() * _g);
	self3.set_y(self3.get_y() * _g);
	hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.set_z(self3,hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self3) * _g);
	return self3;
};
var hxmath_math_Vector2Default = function(x,y) {
	this.x = x;
	this.y = y;
};
hxmath_math_Vector2Default.prototype = {
	toString: function() {
		return "(" + this.x + ", " + this.y + ")";
	}
};
var hxmath_math__$Vector2_Vector2_$Impl_$ = {};
hxmath_math__$Vector2_Vector2_$Impl_$._new = function(x,y) {
	var this1 = new kha_math_FastVector2(x,y);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.fromArray = function(rawData) {
	if(rawData.length != 2) {
		throw new js__$Boot_HaxeError("Invalid rawData.");
	}
	var this1 = new kha_math_FastVector2(rawData[0],rawData[1]);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.fromPolar = function(angle,radius) {
	var this1 = new kha_math_FastVector2(radius * Math.cos(angle),radius * Math.sin(angle));
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.fromVector2Shape = function(other) {
	var this1 = new kha_math_FastVector2(other.x,other.y);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.toIntVector2 = function(this1,func) {
	var self = this1;
	if(func == null) {
		func = Std["int"];
	}
	return hxmath_math__$IntVector2_IntVector2_$Impl_$._new(func(self.x),func(self.y));
};
hxmath_math__$Vector2_Vector2_$Impl_$.dot = function(a,b) {
	return a.x * b.x + a.y * b.y;
};
hxmath_math__$Vector2_Vector2_$Impl_$.multiply = function(a,s) {
	var self = a;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	self1.x *= s;
	self1.y *= s;
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.divide = function(a,s) {
	var self = a;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	self1.x /= s;
	self1.y /= s;
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.add = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	self1.x += b.x;
	self1.y += b.y;
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.subtract = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	self1.x -= b.x;
	self1.y -= b.y;
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.negate = function(a) {
	var this1 = new kha_math_FastVector2(-a.x,-a.y);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.equals = function(a,b) {
	if(!(a == null && b == null)) {
		if(a != null && b != null && a.x == b.x) {
			return a.y == b.y;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxmath_math__$Vector2_Vector2_$Impl_$.lerp = function(a,b,t) {
	var this1 = new kha_math_FastVector2((1.0 - t) * a.x + t * b.x,(1.0 - t) * a.y + t * b.y);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.max = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	self1.x = Math.max(self1.x,b.x);
	self1.y = Math.max(self1.y,b.y);
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.min = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	self1.x = Math.min(self1.x,b.x);
	self1.y = Math.min(self1.y,b.y);
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.project = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	var s = (self1.x * b.x + self1.y * b.y) / (b.x * b.x + b.y * b.y);
	var self2 = b;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self3 = self2;
		var value;
		switch(i) {
		case 0:
			value = self3.x;
			break;
		case 1:
			value = self3.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self4 = self1;
		switch(i) {
		case 0:
			self4.x = value1;
			break;
		case 1:
			self4.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self5 = self1;
	self5.x *= s;
	self5.y *= s;
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.reflect = function(v,normal) {
	var self = v;
	var this1 = new kha_math_FastVector2(self.x,self.y);
	var self1 = this1;
	var self2 = self1;
	var this2 = new kha_math_FastVector2(self2.x,self2.y);
	var self3 = this2;
	var s = (self3.x * normal.x + self3.y * normal.y) / (normal.x * normal.x + normal.y * normal.y);
	var self4 = normal;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self5 = self4;
		var value;
		switch(i) {
		case 0:
			value = self5.x;
			break;
		case 1:
			value = self5.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self6 = self3;
		switch(i) {
		case 0:
			self6.x = value1;
			break;
		case 1:
			self6.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self7 = self3;
	self7.x *= s;
	self7.y *= s;
	var projected = self3;
	var self8 = projected;
	self8.x *= 2.0;
	self8.y *= 2.0;
	var self9 = self1;
	self9.x -= projected.x;
	self9.y -= projected.y;
	return self1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.orthoNormalize = function(u,v) {
	var self = u;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length > 0.0) {
		var self2 = self;
		self2.x /= length;
		self2.y /= length;
	}
	var self3 = v;
	var this1 = new kha_math_FastVector2(self3.x,self3.y);
	var self4 = this1;
	var s = (self4.x * u.x + self4.y * u.y) / (u.x * u.x + u.y * u.y);
	var self5 = u;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self6 = self5;
		var value;
		switch(i) {
		case 0:
			value = self6.x;
			break;
		case 1:
			value = self6.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self7 = self4;
		switch(i) {
		case 0:
			self7.x = value1;
			break;
		case 1:
			self7.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self8 = self4;
	self8.x *= s;
	self8.y *= s;
	var a = self4;
	var self9 = v;
	self9.x -= a.x;
	self9.y -= a.y;
	var self10 = v;
	var self11 = self10;
	var length1 = Math.sqrt(self11.x * self11.x + self11.y * self11.y);
	if(length1 > 0.0) {
		var self12 = self10;
		self12.x /= length1;
		self12.y /= length1;
	}
};
hxmath_math__$Vector2_Vector2_$Impl_$.set = function(this1,x,y) {
	var self = this1;
	self.x = x;
	self.y = y;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.multiplyWith = function(this1,s) {
	var self = this1;
	self.x *= s;
	self.y *= s;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.divideWith = function(this1,s) {
	var self = this1;
	self.x /= s;
	self.y /= s;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.addWith = function(this1,a) {
	var self = this1;
	self.x += a.x;
	self.y += a.y;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.subtractWith = function(this1,a) {
	var self = this1;
	self.x -= a.x;
	self.y -= a.y;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.maxWith = function(this1,a) {
	var self = this1;
	self.x = Math.max(self.x,a.x);
	self.y = Math.max(self.y,a.y);
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.minWith = function(this1,a) {
	var self = this1;
	self.x = Math.min(self.x,a.x);
	self.y = Math.min(self.y,a.y);
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.projectOnto = function(this1,a) {
	var self = this1;
	var s = (self.x * a.x + self.y * a.y) / (a.x * a.x + a.y * a.y);
	var self1 = a;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self2 = self1;
		var value;
		switch(i) {
		case 0:
			value = self2.x;
			break;
		case 1:
			value = self2.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self3 = self;
		switch(i) {
		case 0:
			self3.x = value1;
			break;
		case 1:
			self3.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self4 = self;
	self4.x *= s;
	self4.y *= s;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.reflectBy = function(this1,normal) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector2(self1.x,self1.y);
	var self2 = this2;
	var s = (self2.x * normal.x + self2.y * normal.y) / (normal.x * normal.x + normal.y * normal.y);
	var self3 = normal;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self4 = self3;
		var value;
		switch(i) {
		case 0:
			value = self4.x;
			break;
		case 1:
			value = self4.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self5 = self2;
		switch(i) {
		case 0:
			self5.x = value1;
			break;
		case 1:
			self5.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self6 = self2;
	self6.x *= s;
	self6.y *= s;
	var projected = self2;
	var self7 = projected;
	self7.x *= 2.0;
	self7.y *= 2.0;
	var self8 = self;
	self8.x -= projected.x;
	self8.y -= projected.y;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.copyTo = function(this1,target) {
	var self = this1;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self2 = target;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
};
hxmath_math__$Vector2_Vector2_$Impl_$.copyToShape = function(this1,target) {
	var self = this1;
	target.x = self.x;
	target.y = self.y;
};
hxmath_math__$Vector2_Vector2_$Impl_$.copyFromShape = function(this1,source) {
	var self = this1;
	self.x = source.x;
	self.y = source.y;
};
hxmath_math__$Vector2_Vector2_$Impl_$.clone = function(this1) {
	var self = this1;
	var this2 = new kha_math_FastVector2(self.x,self.y);
	return this2;
};
hxmath_math__$Vector2_Vector2_$Impl_$.getArrayElement = function(this1,i) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x;
	case 1:
		return self.y;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Vector2_Vector2_$Impl_$.setArrayElement = function(this1,i,value) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x = value;
	case 1:
		return self.y = value;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Vector2_Vector2_$Impl_$.applyNegate = function(this1) {
	var self = this1;
	self.x = -self.x;
	self.y = -self.y;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.applyScalarFunc = function(this1,func) {
	var self = this1;
	var _g = 0;
	while(_g < 2) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = func(value);
		var self2 = self;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.angleWith = function(this1,b) {
	var self = this1;
	var self1 = self;
	var self2 = b;
	return Math.acos((self.x * b.x + self.y * b.y) / (Math.sqrt(self1.x * self1.x + self1.y * self1.y) * Math.sqrt(self2.x * self2.x + self2.y * self2.y)));
};
hxmath_math__$Vector2_Vector2_$Impl_$.signedAngleWith = function(this1,b) {
	var self = this1;
	var x = self.x * b.y - b.x * self.y;
	var self1 = self;
	var self2 = self1;
	var self3 = b;
	return (Math.abs(x) < 0 ? 0 : x <= 0 ? -1 : 1) * Math.acos((self1.x * b.x + self1.y * b.y) / (Math.sqrt(self2.x * self2.x + self2.y * self2.y) * Math.sqrt(self3.x * self3.x + self3.y * self3.y)));
};
hxmath_math__$Vector2_Vector2_$Impl_$.distanceTo = function(this1,b) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector2(self1.x,self1.y);
	var self2 = this2;
	self2.x -= b.x;
	self2.y -= b.y;
	var self3 = self2;
	return Math.sqrt(self3.x * self3.x + self3.y * self3.y);
};
hxmath_math__$Vector2_Vector2_$Impl_$.normalize = function(this1) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length > 0.0) {
		var self2 = self;
		self2.x /= length;
		self2.y /= length;
	}
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.normalizeTo = function(this1,newLength) {
	var self = this1;
	var self1 = self;
	var self2 = self1;
	var length = Math.sqrt(self2.x * self2.x + self2.y * self2.y);
	if(length > 0.0) {
		var self3 = self1;
		self3.x /= length;
		self3.y /= length;
	}
	var self4 = self;
	self4.x *= newLength;
	self4.y *= newLength;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.clamp = function(this1,min,max) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y);
	if(length < min) {
		var self2 = self;
		var self3 = self2;
		var self4 = self3;
		var length1 = Math.sqrt(self4.x * self4.x + self4.y * self4.y);
		if(length1 > 0.0) {
			var self5 = self3;
			self5.x /= length1;
			self5.y /= length1;
		}
		var self6 = self2;
		self6.x *= min;
		self6.y *= min;
	} else if(length > max) {
		var self7 = self;
		var self8 = self7;
		var self9 = self8;
		var length2 = Math.sqrt(self9.x * self9.x + self9.y * self9.y);
		if(length2 > 0.0) {
			var self10 = self8;
			self10.x /= length2;
			self10.y /= length2;
		}
		var self11 = self7;
		self11.x *= max;
		self11.y *= max;
	}
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.rotate = function(this1,angle,pivot) {
	var self = this1;
	var cos = Math.cos(angle);
	var sin = Math.sin(angle);
	var dx = self.x - pivot.x;
	var dy = self.y - pivot.y;
	self.x = dx * Math.cos(angle) - dy * Math.sin(angle);
	self.y = dx * Math.sin(angle) + dy * Math.cos(angle);
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.rotateLeft = function(this1) {
	var self = this1;
	var newX = -self.y;
	self.y = self.x;
	self.x = newX;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.rotateRight = function(this1) {
	var self = this1;
	var newX = self.y;
	self.y = -self.x;
	self.x = newX;
	return self;
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_zero = function() {
	var this1 = new kha_math_FastVector2(0.0,0.0);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_xAxis = function() {
	var this1 = new kha_math_FastVector2(1.0,0.0);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_yAxis = function() {
	var this1 = new kha_math_FastVector2(0.0,1.0);
	return this1;
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_length = function(this1) {
	var self = this1;
	return Math.sqrt(self.x * self.x + self.y * self.y);
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_lengthSq = function(this1) {
	var self = this1;
	return self.x * self.x + self.y * self.y;
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_angle = function(this1) {
	var self = this1;
	return Math.atan2(self.y,self.x);
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_normal = function(this1) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector2(self1.x,self1.y);
	var self2 = this2;
	var self3 = self2;
	var length = Math.sqrt(self3.x * self3.x + self3.y * self3.y);
	if(length > 0.0) {
		var self4 = self2;
		self4.x /= length;
		self4.y /= length;
	}
	return self2;
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_rotatedLeft = function(this1) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector2(self1.x,self1.y);
	var self2 = this2;
	var newX = -self2.y;
	self2.y = self2.x;
	self2.x = newX;
	return self2;
};
hxmath_math__$Vector2_Vector2_$Impl_$.get_rotatedRight = function(this1) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector2(self1.x,self1.y);
	var self2 = this2;
	var newX = self2.y;
	self2.y = -self2.x;
	self2.x = newX;
	return self2;
};
var hxmath_math_Vector3Default = function(x,y,z) {
	this.x = x;
	this.y = y;
	this.z = z;
};
hxmath_math_Vector3Default.prototype = {
	toString: function() {
		return "(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
};
var hxmath_math__$Vector3_Vector3_$Impl_$ = {};
hxmath_math__$Vector3_Vector3_$Impl_$._new = function(x,y,z) {
	var this1 = new kha_math_FastVector3(x,y,z);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.fromArray = function(rawData) {
	if(rawData.length != 3) {
		throw new js__$Boot_HaxeError("Invalid rawData.");
	}
	var this1 = new kha_math_FastVector3(rawData[0],rawData[1],rawData[2]);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.fromVector3Shape = function(other) {
	var this1 = new kha_math_FastVector3(other.x,other.y,other.z);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.dot = function(a,b) {
	return a.x * b.x + a.y * b.y + a.z * b.z;
};
hxmath_math__$Vector3_Vector3_$Impl_$.cross = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	var newX = self1.y * b.z - self1.z * b.y;
	var newY = self1.z * b.x - self1.x * b.z;
	var newZ = self1.x * b.y - self1.y * b.x;
	self1.x = newX;
	self1.y = newY;
	self1.z = newZ;
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.multiply = function(a,s) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	self1.x *= s;
	self1.y *= s;
	self1.z *= s;
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.divide = function(a,s) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	self1.x /= s;
	self1.y /= s;
	self1.z /= s;
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.add = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	self1.x += b.x;
	self1.y += b.y;
	self1.z += b.z;
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.subtract = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	self1.x -= b.x;
	self1.y -= b.y;
	self1.z -= b.z;
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.negate = function(a) {
	var this1 = new kha_math_FastVector3(-a.x,-a.y,-a.z);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.equals = function(a,b) {
	if(!(a == null && b == null)) {
		if(a != null && b != null && a.x == b.x && a.y == b.y) {
			return a.z == b.z;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxmath_math__$Vector3_Vector3_$Impl_$.lerp = function(a,b,t) {
	var this1 = new kha_math_FastVector3((1.0 - t) * a.x + t * b.x,(1.0 - t) * a.y + t * b.y,(1.0 - t) * a.z + t * b.z);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.max = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	self1.x = Math.max(self1.x,b.x);
	self1.y = Math.max(self1.y,b.y);
	self1.z = Math.max(self1.z,b.z);
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.min = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	self1.x = Math.min(self1.x,b.x);
	self1.y = Math.min(self1.y,b.y);
	self1.z = Math.min(self1.z,b.z);
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.project = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	var s = (self1.x * b.x + self1.y * b.y + self1.z * b.z) / (b.x * b.x + b.y * b.y + b.z * b.z);
	var self2 = b;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self3 = self2;
		var value;
		switch(i) {
		case 0:
			value = self3.x;
			break;
		case 1:
			value = self3.y;
			break;
		case 2:
			value = self3.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self4 = self1;
		switch(i) {
		case 0:
			self4.x = value1;
			break;
		case 1:
			self4.y = value1;
			break;
		case 2:
			self4.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self5 = self1;
	self5.x *= s;
	self5.y *= s;
	self5.z *= s;
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.reflect = function(v,normal) {
	var self = v;
	var this1 = new kha_math_FastVector3(self.x,self.y,self.z);
	var self1 = this1;
	var self2 = self1;
	var this2 = new kha_math_FastVector3(self2.x,self2.y,self2.z);
	var self3 = this2;
	var s = (self3.x * normal.x + self3.y * normal.y + self3.z * normal.z) / (normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);
	var self4 = normal;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self5 = self4;
		var value;
		switch(i) {
		case 0:
			value = self5.x;
			break;
		case 1:
			value = self5.y;
			break;
		case 2:
			value = self5.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self6 = self3;
		switch(i) {
		case 0:
			self6.x = value1;
			break;
		case 1:
			self6.y = value1;
			break;
		case 2:
			self6.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self7 = self3;
	self7.x *= s;
	self7.y *= s;
	self7.z *= s;
	var projected = self3;
	var self8 = projected;
	self8.x *= 2.0;
	self8.y *= 2.0;
	self8.z *= 2.0;
	var self9 = self1;
	self9.x -= projected.x;
	self9.y -= projected.y;
	self9.z -= projected.z;
	return self1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.orthoNormalize = function(u,v,w) {
	var self = u;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y + self1.z * self1.z);
	if(length > 0.0) {
		var self2 = self;
		self2.x /= length;
		self2.y /= length;
		self2.z /= length;
	}
	var self3 = v;
	var this1 = new kha_math_FastVector3(self3.x,self3.y,self3.z);
	var self4 = this1;
	var s = (self4.x * u.x + self4.y * u.y + self4.z * u.z) / (u.x * u.x + u.y * u.y + u.z * u.z);
	var self5 = u;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self6 = self5;
		var value;
		switch(i) {
		case 0:
			value = self6.x;
			break;
		case 1:
			value = self6.y;
			break;
		case 2:
			value = self6.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self7 = self4;
		switch(i) {
		case 0:
			self7.x = value1;
			break;
		case 1:
			self7.y = value1;
			break;
		case 2:
			self7.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self8 = self4;
	self8.x *= s;
	self8.y *= s;
	self8.z *= s;
	var a = self4;
	var self9 = v;
	self9.x -= a.x;
	self9.y -= a.y;
	self9.z -= a.z;
	var self10 = v;
	var self11 = self10;
	var length1 = Math.sqrt(self11.x * self11.x + self11.y * self11.y + self11.z * self11.z);
	if(length1 > 0.0) {
		var self12 = self10;
		self12.x /= length1;
		self12.y /= length1;
		self12.z /= length1;
	}
	var self13 = w;
	var this2 = new kha_math_FastVector3(self13.x,self13.y,self13.z);
	var self14 = this2;
	var s1 = (self14.x * u.x + self14.y * u.y + self14.z * u.z) / (u.x * u.x + u.y * u.y + u.z * u.z);
	var self15 = u;
	var _g1 = 0;
	while(_g1 < 3) {
		var i1 = _g1++;
		var self16 = self15;
		var value2;
		switch(i1) {
		case 0:
			value2 = self16.x;
			break;
		case 1:
			value2 = self16.y;
			break;
		case 2:
			value2 = self16.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value3 = value2;
		var self17 = self14;
		switch(i1) {
		case 0:
			self17.x = value3;
			break;
		case 1:
			self17.y = value3;
			break;
		case 2:
			self17.z = value3;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self18 = self14;
	self18.x *= s1;
	self18.y *= s1;
	self18.z *= s1;
	var a1 = self14;
	var self19 = w;
	self19.x -= a1.x;
	self19.y -= a1.y;
	self19.z -= a1.z;
	var self20 = w;
	var this3 = new kha_math_FastVector3(self20.x,self20.y,self20.z);
	var self21 = this3;
	var s2 = (self21.x * v.x + self21.y * v.y + self21.z * v.z) / (v.x * v.x + v.y * v.y + v.z * v.z);
	var self22 = v;
	var _g2 = 0;
	while(_g2 < 3) {
		var i2 = _g2++;
		var self23 = self22;
		var value4;
		switch(i2) {
		case 0:
			value4 = self23.x;
			break;
		case 1:
			value4 = self23.y;
			break;
		case 2:
			value4 = self23.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value5 = value4;
		var self24 = self21;
		switch(i2) {
		case 0:
			self24.x = value5;
			break;
		case 1:
			self24.y = value5;
			break;
		case 2:
			self24.z = value5;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self25 = self21;
	self25.x *= s2;
	self25.y *= s2;
	self25.z *= s2;
	var a2 = self21;
	var self26 = w;
	self26.x -= a2.x;
	self26.y -= a2.y;
	self26.z -= a2.z;
	var self27 = w;
	var self28 = self27;
	var length2 = Math.sqrt(self28.x * self28.x + self28.y * self28.y + self28.z * self28.z);
	if(length2 > 0.0) {
		var self29 = self27;
		self29.x /= length2;
		self29.y /= length2;
		self29.z /= length2;
	}
};
hxmath_math__$Vector3_Vector3_$Impl_$.set = function(this1,x,y,z) {
	var self = this1;
	self.x = x;
	self.y = y;
	self.z = z;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.crossWith = function(this1,a) {
	var self = this1;
	var newX = self.y * a.z - self.z * a.y;
	var newY = self.z * a.x - self.x * a.z;
	var newZ = self.x * a.y - self.y * a.x;
	self.x = newX;
	self.y = newY;
	self.z = newZ;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.multiplyWith = function(this1,s) {
	var self = this1;
	self.x *= s;
	self.y *= s;
	self.z *= s;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.divideWith = function(this1,s) {
	var self = this1;
	self.x /= s;
	self.y /= s;
	self.z /= s;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.addWith = function(this1,a) {
	var self = this1;
	self.x += a.x;
	self.y += a.y;
	self.z += a.z;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.subtractWith = function(this1,a) {
	var self = this1;
	self.x -= a.x;
	self.y -= a.y;
	self.z -= a.z;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.maxWith = function(this1,a) {
	var self = this1;
	self.x = Math.max(self.x,a.x);
	self.y = Math.max(self.y,a.y);
	self.z = Math.max(self.z,a.z);
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.minWith = function(this1,a) {
	var self = this1;
	self.x = Math.min(self.x,a.x);
	self.y = Math.min(self.y,a.y);
	self.z = Math.min(self.z,a.z);
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.projectOnto = function(this1,a) {
	var self = this1;
	var s = (self.x * a.x + self.y * a.y + self.z * a.z) / (a.x * a.x + a.y * a.y + a.z * a.z);
	var self1 = a;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self2 = self1;
		var value;
		switch(i) {
		case 0:
			value = self2.x;
			break;
		case 1:
			value = self2.y;
			break;
		case 2:
			value = self2.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self3 = self;
		switch(i) {
		case 0:
			self3.x = value1;
			break;
		case 1:
			self3.y = value1;
			break;
		case 2:
			self3.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self4 = self;
	self4.x *= s;
	self4.y *= s;
	self4.z *= s;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.projectOntoPlane = function(this1,normal) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector3(self1.x,self1.y,self1.z);
	var self2 = this2;
	var s = (self2.x * normal.x + self2.y * normal.y + self2.z * normal.z) / (normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);
	var self3 = normal;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self4 = self3;
		var value;
		switch(i) {
		case 0:
			value = self4.x;
			break;
		case 1:
			value = self4.y;
			break;
		case 2:
			value = self4.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self5 = self2;
		switch(i) {
		case 0:
			self5.x = value1;
			break;
		case 1:
			self5.y = value1;
			break;
		case 2:
			self5.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self6 = self2;
	self6.x *= s;
	self6.y *= s;
	self6.z *= s;
	var a = self2;
	var self7 = self;
	self7.x -= a.x;
	self7.y -= a.y;
	self7.z -= a.z;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.reflectBy = function(this1,normal) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector3(self1.x,self1.y,self1.z);
	var self2 = this2;
	var s = (self2.x * normal.x + self2.y * normal.y + self2.z * normal.z) / (normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);
	var self3 = normal;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self4 = self3;
		var value;
		switch(i) {
		case 0:
			value = self4.x;
			break;
		case 1:
			value = self4.y;
			break;
		case 2:
			value = self4.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self5 = self2;
		switch(i) {
		case 0:
			self5.x = value1;
			break;
		case 1:
			self5.y = value1;
			break;
		case 2:
			self5.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self6 = self2;
	self6.x *= s;
	self6.y *= s;
	self6.z *= s;
	var projected = self2;
	var self7 = projected;
	self7.x *= 2.0;
	self7.y *= 2.0;
	self7.z *= 2.0;
	var self8 = self;
	self8.x -= projected.x;
	self8.y -= projected.y;
	self8.z -= projected.z;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.copyTo = function(this1,target) {
	var self = this1;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		case 2:
			value = self1.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self2 = target;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		case 2:
			self2.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
};
hxmath_math__$Vector3_Vector3_$Impl_$.copyToShape = function(this1,target) {
	var self = this1;
	target.x = self.x;
	target.y = self.y;
	target.z = self.z;
};
hxmath_math__$Vector3_Vector3_$Impl_$.copyFromShape = function(this1,source) {
	var self = this1;
	self.x = source.x;
	self.y = source.y;
	self.z = source.z;
};
hxmath_math__$Vector3_Vector3_$Impl_$.clone = function(this1) {
	var self = this1;
	var this2 = new kha_math_FastVector3(self.x,self.y,self.z);
	return this2;
};
hxmath_math__$Vector3_Vector3_$Impl_$.getArrayElement = function(this1,i) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x;
	case 1:
		return self.y;
	case 2:
		return self.z;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Vector3_Vector3_$Impl_$.setArrayElement = function(this1,i,value) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x = value;
	case 1:
		return self.y = value;
	case 2:
		return self.z = value;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Vector3_Vector3_$Impl_$.applyNegate = function(this1) {
	var self = this1;
	self.x = -self.x;
	self.y = -self.y;
	self.z = -self.z;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.applyScalarFunc = function(this1,func) {
	var self = this1;
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		case 2:
			value = self1.z;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = func(value);
		var self2 = self;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		case 2:
			self2.z = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.angleWith = function(this1,b) {
	var self = this1;
	var self1 = self;
	var self2 = b;
	return Math.acos((self.x * b.x + self.y * b.y + self.z * b.z) / (Math.sqrt(self1.x * self1.x + self1.y * self1.y + self1.z * self1.z) * Math.sqrt(self2.x * self2.x + self2.y * self2.y + self2.z * self2.z)));
};
hxmath_math__$Vector3_Vector3_$Impl_$.distanceTo = function(this1,b) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector3(self1.x,self1.y,self1.z);
	var self2 = this2;
	self2.x -= b.x;
	self2.y -= b.y;
	self2.z -= b.z;
	var self3 = self2;
	return Math.sqrt(self3.x * self3.x + self3.y * self3.y + self3.z * self3.z);
};
hxmath_math__$Vector3_Vector3_$Impl_$.normalize = function(this1) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y + self1.z * self1.z);
	if(length > 0.0) {
		var self2 = self;
		self2.x /= length;
		self2.y /= length;
		self2.z /= length;
	}
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.normalizeTo = function(this1,newLength) {
	var self = this1;
	var self1 = self;
	var self2 = self1;
	var length = Math.sqrt(self2.x * self2.x + self2.y * self2.y + self2.z * self2.z);
	if(length > 0.0) {
		var self3 = self1;
		self3.x /= length;
		self3.y /= length;
		self3.z /= length;
	}
	var self4 = self;
	self4.x *= newLength;
	self4.y *= newLength;
	self4.z *= newLength;
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.clamp = function(this1,min,max) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y + self1.z * self1.z);
	if(length < min) {
		var self2 = self;
		var self3 = self2;
		var self4 = self3;
		var length1 = Math.sqrt(self4.x * self4.x + self4.y * self4.y + self4.z * self4.z);
		if(length1 > 0.0) {
			var self5 = self3;
			self5.x /= length1;
			self5.y /= length1;
			self5.z /= length1;
		}
		var self6 = self2;
		self6.x *= min;
		self6.y *= min;
		self6.z *= min;
	} else if(length > max) {
		var self7 = self;
		var self8 = self7;
		var self9 = self8;
		var length2 = Math.sqrt(self9.x * self9.x + self9.y * self9.y + self9.z * self9.z);
		if(length2 > 0.0) {
			var self10 = self8;
			self10.x /= length2;
			self10.y /= length2;
			self10.z /= length2;
		}
		var self11 = self7;
		self11.x *= max;
		self11.y *= max;
		self11.z *= max;
	}
	return self;
};
hxmath_math__$Vector3_Vector3_$Impl_$.rotate = function(this1,angleDegrees,axis) {
	var self = this1;
	var angleRadians = Math.PI / 180 * angleDegrees;
	var cosHalfAngle = Math.cos(angleRadians / 2.0);
	var sinHalfAngle = Math.sin(angleRadians / 2.0);
	var this2 = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$._new(cosHalfAngle,sinHalfAngle * axis.x,sinHalfAngle * axis.y,sinHalfAngle * axis.z);
	var self1 = this2;
	var a = 2.0 * (self1.get_x() * self.x + self1.get_y() * self.y + hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * self.z);
	var b = hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1) - self1.get_x() * self1.get_x() - self1.get_y() * self1.get_y() - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1);
	var c = 2.0 * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_s(self1);
	var this3 = new kha_math_FastVector3(a * self1.get_x() + b * self.x + c * (self1.get_y() * self.z - hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * self.y),a * self1.get_y() + b * self.y + c * (hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) * self.x - self1.get_x() * self.z),a * hxmath_math__$Quaternion_KhaQuaternionWrapper_$Impl_$.get_z(self1) + b * self.z + c * (self1.get_x() * self.y - self1.get_y() * self.x));
	this1 = this3;
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.get_length = function(this1) {
	var self = this1;
	return Math.sqrt(self.x * self.x + self.y * self.y + self.z * self.z);
};
hxmath_math__$Vector3_Vector3_$Impl_$.get_lengthSq = function(this1) {
	var self = this1;
	return self.x * self.x + self.y * self.y + self.z * self.z;
};
hxmath_math__$Vector3_Vector3_$Impl_$.get_zero = function() {
	var this1 = new kha_math_FastVector3(0.0,0.0,0.0);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.get_xAxis = function() {
	var this1 = new kha_math_FastVector3(1.0,0.0,0.0);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.get_yAxis = function() {
	var this1 = new kha_math_FastVector3(0.0,1.0,0.0);
	return this1;
};
hxmath_math__$Vector3_Vector3_$Impl_$.get_zAxis = function() {
	var this1 = new kha_math_FastVector3(0.0,0.0,1.0);
	return this1;
};
var hxmath_math_Vector4Default = function(x,y,z,w) {
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
hxmath_math_Vector4Default.prototype = {
	toString: function() {
		return "(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
};
var hxmath_math__$Vector4_Vector4_$Impl_$ = {};
hxmath_math__$Vector4_Vector4_$Impl_$._new = function(x,y,z,w) {
	var this1 = new kha_math_FastVector4(x,y,z,w);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.fromArray = function(rawData) {
	if(rawData.length != 4) {
		throw new js__$Boot_HaxeError("Invalid rawData.");
	}
	var this1 = new kha_math_FastVector4(rawData[0],rawData[1],rawData[2],rawData[3]);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.fromVector4Shape = function(other) {
	var this1 = new kha_math_FastVector4(other.x,other.y,other.z,other.w);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.dot = function(a,b) {
	return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;
};
hxmath_math__$Vector4_Vector4_$Impl_$.multiply = function(a,s) {
	var self = a;
	var this1 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	var self1 = this1;
	self1.x *= s;
	self1.y *= s;
	self1.z *= s;
	self1.w *= s;
	return self1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.divide = function(a,s) {
	var self = a;
	var this1 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	var self1 = this1;
	self1.x /= s;
	self1.y /= s;
	self1.z /= s;
	self1.w /= s;
	return self1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.add = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	var self1 = this1;
	self1.x += b.x;
	self1.y += b.y;
	self1.z += b.z;
	self1.w += b.w;
	return self1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.subtract = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	var self1 = this1;
	self1.x -= b.x;
	self1.y -= b.y;
	self1.z -= b.z;
	self1.w -= b.w;
	return self1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.negate = function(a) {
	var this1 = new kha_math_FastVector4(-a.x,-a.y,-a.z,-a.w);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.equals = function(a,b) {
	if(!(a == null && b == null)) {
		if(a != null && b != null && a.x == b.x && a.y == b.y && a.z == b.z) {
			return a.w == b.w;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxmath_math__$Vector4_Vector4_$Impl_$.lerp = function(a,b,t) {
	var this1 = new kha_math_FastVector4((1.0 - t) * a.x + t * b.x,(1.0 - t) * a.y + t * b.y,(1.0 - t) * a.z + t * b.z,(1.0 - t) * a.w + t * b.w);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.max = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	var self1 = this1;
	self1.x = Math.max(self1.x,b.x);
	self1.y = Math.max(self1.y,b.y);
	self1.z = Math.max(self1.z,b.z);
	self1.w = Math.max(self1.w,b.w);
	return self1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.min = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	var self1 = this1;
	self1.x = Math.min(self1.x,b.x);
	self1.y = Math.min(self1.y,b.y);
	self1.z = Math.min(self1.z,b.z);
	self1.w = Math.min(self1.w,b.w);
	return self1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.project = function(a,b) {
	var self = a;
	var this1 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	var self1 = this1;
	var s = (self1.x * b.x + self1.y * b.y + self1.z * b.z + self1.w * b.w) / (b.x * b.x + b.y * b.y + b.z * b.z + b.w * b.w);
	var self2 = b;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var self3 = self2;
		var value;
		switch(i) {
		case 0:
			value = self3.x;
			break;
		case 1:
			value = self3.y;
			break;
		case 2:
			value = self3.z;
			break;
		case 3:
			value = self3.w;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self4 = self1;
		switch(i) {
		case 0:
			self4.x = value1;
			break;
		case 1:
			self4.y = value1;
			break;
		case 2:
			self4.z = value1;
			break;
		case 3:
			self4.w = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self5 = self1;
	self5.x *= s;
	self5.y *= s;
	self5.z *= s;
	self5.w *= s;
	return self1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.set = function(this1,x,y,z,w) {
	var self = this1;
	self.x = x;
	self.y = y;
	self.z = z;
	self.w = w;
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.multiplyWith = function(this1,s) {
	var self = this1;
	self.x *= s;
	self.y *= s;
	self.z *= s;
	self.w *= s;
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.divideWith = function(this1,s) {
	var self = this1;
	self.x /= s;
	self.y /= s;
	self.z /= s;
	self.w /= s;
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.addWith = function(this1,a) {
	var self = this1;
	self.x += a.x;
	self.y += a.y;
	self.z += a.z;
	self.w += a.w;
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.subtractWith = function(this1,a) {
	var self = this1;
	self.x -= a.x;
	self.y -= a.y;
	self.z -= a.z;
	self.w -= a.w;
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.maxWith = function(this1,a) {
	var self = this1;
	self.x = Math.max(self.x,a.x);
	self.y = Math.max(self.y,a.y);
	self.z = Math.max(self.z,a.z);
	self.w = Math.max(self.w,a.w);
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.minWith = function(this1,a) {
	var self = this1;
	self.x = Math.min(self.x,a.x);
	self.y = Math.min(self.y,a.y);
	self.z = Math.min(self.z,a.z);
	self.w = Math.min(self.w,a.w);
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.projectOnto = function(this1,a) {
	var self = this1;
	var s = (self.x * a.x + self.y * a.y + self.z * a.z + self.w * a.w) / (a.x * a.x + a.y * a.y + a.z * a.z + a.w * a.w);
	var self1 = a;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var self2 = self1;
		var value;
		switch(i) {
		case 0:
			value = self2.x;
			break;
		case 1:
			value = self2.y;
			break;
		case 2:
			value = self2.z;
			break;
		case 3:
			value = self2.w;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self3 = self;
		switch(i) {
		case 0:
			self3.x = value1;
			break;
		case 1:
			self3.y = value1;
			break;
		case 2:
			self3.z = value1;
			break;
		case 3:
			self3.w = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	var self4 = self;
	self4.x *= s;
	self4.y *= s;
	self4.z *= s;
	self4.w *= s;
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.copyTo = function(this1,target) {
	var self = this1;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		case 2:
			value = self1.z;
			break;
		case 3:
			value = self1.w;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = value;
		var self2 = target;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		case 2:
			self2.z = value1;
			break;
		case 3:
			self2.w = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
};
hxmath_math__$Vector4_Vector4_$Impl_$.copyToShape = function(this1,target) {
	var self = this1;
	target.x = self.x;
	target.y = self.y;
	target.z = self.z;
	target.w = self.w;
};
hxmath_math__$Vector4_Vector4_$Impl_$.copyFromShape = function(this1,source) {
	var self = this1;
	self.x = source.x;
	self.y = source.y;
	self.z = source.z;
	self.w = source.w;
};
hxmath_math__$Vector4_Vector4_$Impl_$.clone = function(this1) {
	var self = this1;
	var this2 = new kha_math_FastVector4(self.x,self.y,self.z,self.w);
	return this2;
};
hxmath_math__$Vector4_Vector4_$Impl_$.getArrayElement = function(this1,i) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x;
	case 1:
		return self.y;
	case 2:
		return self.z;
	case 3:
		return self.w;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Vector4_Vector4_$Impl_$.setArrayElement = function(this1,i,value) {
	var self = this1;
	switch(i) {
	case 0:
		return self.x = value;
	case 1:
		return self.y = value;
	case 2:
		return self.z = value;
	case 3:
		return self.w = value;
	default:
		throw new js__$Boot_HaxeError("Invalid element");
	}
};
hxmath_math__$Vector4_Vector4_$Impl_$.applyScalarFunc = function(this1,func) {
	var self = this1;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var self1 = self;
		var value;
		switch(i) {
		case 0:
			value = self1.x;
			break;
		case 1:
			value = self1.y;
			break;
		case 2:
			value = self1.z;
			break;
		case 3:
			value = self1.w;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
		var value1 = func(value);
		var self2 = self;
		switch(i) {
		case 0:
			self2.x = value1;
			break;
		case 1:
			self2.y = value1;
			break;
		case 2:
			self2.z = value1;
			break;
		case 3:
			self2.w = value1;
			break;
		default:
			throw new js__$Boot_HaxeError("Invalid element");
		}
	}
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.distanceTo = function(this1,b) {
	var self = this1;
	var self1 = self;
	var this2 = new kha_math_FastVector4(self1.x,self1.y,self1.z,self1.w);
	var self2 = this2;
	self2.x -= b.x;
	self2.y -= b.y;
	self2.z -= b.z;
	self2.w -= b.w;
	var self3 = self2;
	return Math.sqrt(self3.x * self3.x + self3.y * self3.y + self3.z * self3.z + self3.w * self3.w);
};
hxmath_math__$Vector4_Vector4_$Impl_$.normalize = function(this1) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y + self1.z * self1.z + self1.w * self1.w);
	if(length > 0.0) {
		var self2 = self;
		self2.x /= length;
		self2.y /= length;
		self2.z /= length;
		self2.w /= length;
	}
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.normalizeTo = function(this1,newLength) {
	var self = this1;
	var self1 = self;
	var self2 = self1;
	var length = Math.sqrt(self2.x * self2.x + self2.y * self2.y + self2.z * self2.z + self2.w * self2.w);
	if(length > 0.0) {
		var self3 = self1;
		self3.x /= length;
		self3.y /= length;
		self3.z /= length;
		self3.w /= length;
	}
	var self4 = self;
	self4.x *= newLength;
	self4.y *= newLength;
	self4.z *= newLength;
	self4.w *= newLength;
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.clamp = function(this1,min,max) {
	var self = this1;
	var self1 = self;
	var length = Math.sqrt(self1.x * self1.x + self1.y * self1.y + self1.z * self1.z + self1.w * self1.w);
	if(length < min) {
		var self2 = self;
		var self3 = self2;
		var self4 = self3;
		var length1 = Math.sqrt(self4.x * self4.x + self4.y * self4.y + self4.z * self4.z + self4.w * self4.w);
		if(length1 > 0.0) {
			var self5 = self3;
			self5.x /= length1;
			self5.y /= length1;
			self5.z /= length1;
			self5.w /= length1;
		}
		var self6 = self2;
		self6.x *= min;
		self6.y *= min;
		self6.z *= min;
		self6.w *= min;
	} else if(length > max) {
		var self7 = self;
		var self8 = self7;
		var self9 = self8;
		var length2 = Math.sqrt(self9.x * self9.x + self9.y * self9.y + self9.z * self9.z + self9.w * self9.w);
		if(length2 > 0.0) {
			var self10 = self8;
			self10.x /= length2;
			self10.y /= length2;
			self10.z /= length2;
			self10.w /= length2;
		}
		var self11 = self7;
		self11.x *= max;
		self11.y *= max;
		self11.z *= max;
		self11.w *= max;
	}
	return self;
};
hxmath_math__$Vector4_Vector4_$Impl_$.get_length = function(this1) {
	var self = this1;
	return Math.sqrt(self.x * self.x + self.y * self.y + self.z * self.z + self.w * self.w);
};
hxmath_math__$Vector4_Vector4_$Impl_$.get_lengthSq = function(this1) {
	var self = this1;
	return self.x * self.x + self.y * self.y + self.z * self.z + self.w * self.w;
};
hxmath_math__$Vector4_Vector4_$Impl_$.get_zero = function() {
	var this1 = new kha_math_FastVector4(0.0,0.0,0.0,0.0);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.get_xAxis = function() {
	var this1 = new kha_math_FastVector4(1.0,0.0,0.0,0.0);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.get_yAxis = function() {
	var this1 = new kha_math_FastVector4(0.0,1.0,0.0,0.0);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.get_zAxis = function() {
	var this1 = new kha_math_FastVector4(0.0,0.0,1.0,0.0);
	return this1;
};
hxmath_math__$Vector4_Vector4_$Impl_$.get_wAxis = function() {
	var this1 = new kha_math_FastVector4(0.0,0.0,0.0,1.0);
	return this1;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
kha_math_FastVector2.fromVector2 = function(v) {
	return new kha_math_FastVector2(v.x,v.y);
};
kha_math_FastVector2.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector2(" + this.x + ", " + this.y + ")";
	}
};
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
kha_math_FastVector3.fromVector3 = function(v) {
	return new kha_math_FastVector3(v.x,v.y,v.z);
};
kha_math_FastVector3.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector3(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
};
var kha_math_FastVector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
kha_math_FastVector4.fromVector4 = function(v) {
	return new kha_math_FastVector4(v.x,v.y,v.z,v.w);
};
kha_math_FastVector4.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector4(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
};
var kha_math_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
kha_math_Matrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_Matrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_Matrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new kha_math_Matrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_Matrix4.lookAt = function(eye,at,up) {
	var zaxis = new kha_math_Vector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var _x = zaxis.y * up.z - zaxis.z * up.y;
	var _y = zaxis.z * up.x - zaxis.x * up.z;
	var _z = zaxis.x * up.y - zaxis.y * up.x;
	var xaxis = new kha_math_Vector3(_x,_y,_z);
	xaxis.set_length(1);
	var yaxis_z;
	var yaxis_y;
	var yaxis_x;
	var _x1 = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y1 = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z1 = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	yaxis_x = _x1;
	yaxis_y = _y1;
	yaxis_z = _z1;
	return new kha_math_Matrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
var kha_math_Quaternion = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.values = [];
	this.values.push(x);
	this.values.push(y);
	this.values.push(z);
	this.values.push(w);
};
kha_math_Quaternion.fromAxisAngle = function(axis,radians) {
	var q = new kha_math_Quaternion();
	q.set_w(Math.cos(radians / 2.0));
	q.set_x(q.set_y(q.set_z(Math.sin(radians / 2.0))));
	var _g = q;
	_g.set_x(_g.get_x() * axis.x);
	var _g1 = q;
	_g1.set_y(_g1.get_y() * axis.y);
	var _g2 = q;
	_g2.set_z(_g2.get_z() * axis.z);
	return q;
};
kha_math_Quaternion.prototype = {
	slerp: function(t,q) {
		var epsilon = 0.0005;
		var dot = this.dot(q);
		if(dot > 1 - epsilon) {
			var result = q.add(this.sub(q).scaled(t));
			result.normalize();
			return result;
		}
		if(dot < 0) {
			dot = 0;
		}
		if(dot > 1) {
			dot = 1;
		}
		var theta0 = Math.acos(dot);
		var theta = theta0 * t;
		var q2 = q.sub(this.scaled(dot));
		q2.normalize();
		var result1 = this.scaled(Math.cos(theta)).add(q2.scaled(Math.sin(theta)));
		result1.normalize();
		return result1;
	}
	,rotated: function(b) {
		var q = new kha_math_Quaternion();
		q.set_w(this.get_w() * b.get_w() - this.get_x() * b.get_x() - this.get_y() * b.get_y() - this.get_z() * b.get_z());
		q.set_x(this.get_w() * b.get_x() + this.get_x() * b.get_w() + this.get_y() * b.get_z() - this.get_z() * b.get_y());
		q.set_y(this.get_w() * b.get_y() + this.get_y() * b.get_w() + this.get_z() * b.get_x() - this.get_x() * b.get_z());
		q.set_z(this.get_w() * b.get_z() + this.get_z() * b.get_w() + this.get_x() * b.get_y() - this.get_y() * b.get_x());
		q.normalize();
		return q;
	}
	,scaled: function(scale) {
		return new kha_math_Quaternion(this.get_x() * scale,this.get_y() * scale,this.get_z() * scale,this.get_w() * scale);
	}
	,scale: function(scale) {
		this.set_x(this.get_x() * scale);
		this.set_y(this.get_y() * scale);
		this.set_z(this.get_z() * scale);
		this.set_w(this.get_w() * scale);
	}
	,matrix: function() {
		var s = 2.0;
		var xs = this.get_x() * s;
		var ys = this.get_y() * s;
		var zs = this.get_z() * s;
		var wx = this.get_w() * xs;
		var wy = this.get_w() * ys;
		var wz = this.get_w() * zs;
		var xx = this.get_x() * xs;
		var xy = this.get_x() * ys;
		var xz = this.get_x() * zs;
		var yy = this.get_y() * ys;
		var yz = this.get_y() * zs;
		var zz = this.get_z() * zs;
		return new kha_math_Matrix4(1 - (yy + zz),xy - wz,xz + wy,0,xy + wz,1 - (xx + zz),yz - wx,0,xz - wy,yz + wx,1 - (xx + yy),0,0,0,0,1);
	}
	,get: function(index) {
		return this.values[index];
	}
	,set: function(index,value) {
		this.values[index] = value;
	}
	,get_x: function() {
		return this.values[0];
	}
	,set_x: function(value) {
		return this.values[0] = value;
	}
	,get_y: function() {
		return this.values[1];
	}
	,set_y: function(value) {
		return this.values[1] = value;
	}
	,get_z: function() {
		return this.values[2];
	}
	,set_z: function(value) {
		return this.values[2] = value;
	}
	,get_w: function() {
		return this.values[3];
	}
	,set_w: function(value) {
		return this.values[3] = value;
	}
	,get_length: function() {
		return Math.sqrt(this.get_x() * this.get_x() + this.get_y() * this.get_y() + this.get_z() * this.get_z() + this.get_w() * this.get_w());
	}
	,set_length: function(length) {
		if(this.get_length() == 0) {
			return 0;
		}
		var mul = length / this.get_length();
		var _g = this;
		_g.set_x(_g.get_x() * mul);
		var _g1 = this;
		_g1.set_y(_g1.get_y() * mul);
		var _g2 = this;
		_g2.set_z(_g2.get_z() * mul);
		return length;
	}
	,addVector: function(vec) {
		var result = new kha_math_Quaternion(this.get_x(),this.get_y(),this.get_z(),this.get_w());
		var q1 = new kha_math_Quaternion(0,vec.x,vec.y,vec.z);
		q1 = q1.mult(result);
		var _g = result;
		_g.set_x(_g.get_x() + q1.get_x() * 0.5);
		var _g1 = result;
		_g1.set_y(_g1.get_y() + q1.get_y() * 0.5);
		var _g2 = result;
		_g2.set_z(_g2.get_z() + q1.get_z() * 0.5);
		var _g3 = result;
		_g3.set_w(_g3.get_w() + q1.get_w() * 0.5);
		return result;
	}
	,add: function(q) {
		return new kha_math_Quaternion(this.get_x() + q.get_x(),this.get_y() + q.get_y(),this.get_z() + q.get_z(),this.get_w() + q.get_w());
	}
	,sub: function(q) {
		return new kha_math_Quaternion(this.get_x() - q.get_x(),this.get_y() - q.get_y(),this.get_z() - q.get_z(),this.get_w() - q.get_w());
	}
	,mult: function(r) {
		var q = new kha_math_Quaternion();
		q.set_x(this.get_w() * r.get_x() + this.get_x() * r.get_w() + this.get_y() * r.get_z() - this.get_z() * r.get_y());
		q.set_y(this.get_w() * r.get_y() - this.get_x() * r.get_z() + this.get_y() * r.get_w() + this.get_z() * r.get_x());
		q.set_z(this.get_w() * r.get_z() + this.get_x() * r.get_y() - this.get_y() * r.get_x() + this.get_z() * r.get_w());
		q.set_w(this.get_w() * r.get_w() - this.get_x() * r.get_x() - this.get_y() * r.get_y() - this.get_z() * r.get_z());
		return q;
	}
	,normalize: function() {
		this.scale(1.0 / this.get_length());
	}
	,dot: function(q) {
		return this.get_x() * q.get_x() + this.get_y() * q.get_y() + this.get_z() * q.get_z() + this.get_w() * q.get_w();
	}
	,getEulerAngles: function(A1,A2,A3,S,D) {
		if(D == null) {
			D = 1;
		}
		if(S == null) {
			S = 1;
		}
		var result = new kha_math_Vector3();
		var Q = [];
		Q[0] = this.get_x();
		Q[1] = this.get_y();
		Q[2] = this.get_z();
		var ww = this.get_w() * this.get_w();
		var Q11 = Q[A1] * Q[A1];
		var Q22 = Q[A2] * Q[A2];
		var Q33 = Q[A3] * Q[A3];
		var psign = -1;
		var SingularityRadius = 0.0000001;
		var PiOver2 = Math.PI / 2.0;
		if((A1 + 1) % 3 == A2 && (A2 + 1) % 3 == A3) {
			psign = 1;
		}
		var s2 = psign * 2.0 * (psign * this.get_w() * Q[A2] + Q[A1] * Q[A3]);
		if(s2 < -1 + SingularityRadius) {
			result.x = 0;
			result.y = -S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else if(s2 > 1 - SingularityRadius) {
			result.x = 0;
			result.y = S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else {
			result.x = -S * D * Math.atan2(-2 * (this.get_w() * Q[A1] - psign * Q[A2] * Q[A3]),ww + Q33 - Q11 - Q22);
			result.y = S * D * Math.asin(s2);
			result.z = S * D * Math.atan2(2 * (this.get_w() * Q[A3] - psign * Q[A1] * Q[A2]),ww + Q11 - Q22 - Q33);
		}
		return result;
	}
};
var kha_math_Vector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
kha_math_Vector2.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
};
var kha_math_Vector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
kha_math_Vector3.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
};
var kha_math_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
kha_math_Vector4.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
};
hxmath_math__$IntVector2_IntVector2_$Impl_$.elementCount = 2;
hxmath_math_MathUtil.eps = 1e-6;
hxmath_math__$Matrix3x3_Matrix3x3_$Impl_$.elementCount = 9;
hxmath_math__$Quaternion_Quaternion_$Impl_$.elementCount = 4;
hxmath_math__$Vector2_Vector2_$Impl_$.elementCount = 2;
hxmath_math__$Vector3_Vector3_$Impl_$.elementCount = 3;
hxmath_math__$Vector4_Vector4_$Impl_$.elementCount = 4;
kha_math_Matrix4.width = 4;
kha_math_Matrix4.height = 4;
kha_math_Quaternion.AXIS_X = 0;
kha_math_Quaternion.AXIS_Y = 1;
kha_math_Quaternion.AXIS_Z = 2;
Main.main();
})();
